@page
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="utf-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>@ViewData["Title"]</title>
   <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>

@{    
   Random rnd = new Random(); 

   List<IndexModel.Keyword> keywords = new List<IndexModel.Keyword>{
      new IndexModel.Keyword{ text="delete", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="abstract", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="anonymous", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="as", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="assembly", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="break", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="catch", lang="Solidity", category="Exception Handling" },
      new IndexModel.Keyword{ text="constant", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="constructor", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="continue", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="contract", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="do", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="else", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="enum", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="emit", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="event", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="external", lang="Solidity", category="Access Modifier" },
      new IndexModel.Keyword{ text="fallback", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="for", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="function", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="hex", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="if", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="indexed", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="interface", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="internal", lang="Solidity", category="Access Modifier" },
      new IndexModel.Keyword{ text="immutable", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="import", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="is", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="library", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="mapping", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="memory", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="modifier", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="new", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="override", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="payable", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="public", lang="Solidity", category="Access Modifier" },
      new IndexModel.Keyword{ text="pragma", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="private", lang="Solidity", category="Access Modifier" },
      new IndexModel.Keyword{ text="pure", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="receive", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="return", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="returns", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="storage", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="calldata", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="struct", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="throw", lang="Solidity", category="Exception Handling" },
      new IndexModel.Keyword{ text="try", lang="Solidity", category="Exception Handling" },
      new IndexModel.Keyword{ text="type", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="unchecked", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="unicode", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="using", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="view", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="virtual", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="while", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="wei", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="gwei", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="ether", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="seconds", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="minutes", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="hours", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="days", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="weeks", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="years", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="int", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="string", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="address", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bool", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint8", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint16", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint24", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint32", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint40", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint48", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint56", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint64", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint72", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint80", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint88", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint96", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint104", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint112", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint120", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint128", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint136", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint144", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint152", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint160", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint168", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint176", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint184", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint192", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint200", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint208", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint216", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint224", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint232", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint240", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint248", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="uint256", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int8", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int16", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int24", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int32", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int40", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int48", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int56", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int64", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int72", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int80", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int88", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int96", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int104", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int112", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int120", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int128", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int136", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int144", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int152", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int160", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int168", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int176", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int184", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int192", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int200", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int208", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int216", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int224", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int232", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int240", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int248", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="int256", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes1", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes2", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes3", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes4", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes5", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes6", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes7", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes8", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes9", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes10", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes11", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes12", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes13", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes14", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes15", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes16", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes17", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes18", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes19", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes20", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes21", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes22", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes23", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes24", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes25", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes26", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes27", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes28", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes29", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes30", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes31", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="bytes32", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="fixed", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="ufixed", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="true", lang="Solidity", category="Literal" },
      new IndexModel.Keyword{ text="false", lang="Solidity", category="Literal" },
      new IndexModel.Keyword{ text="after", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="alias", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="apply", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="auto", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="byte", lang="Solidity", category="Type" },
      new IndexModel.Keyword{ text="case", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="copyof", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="default", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="define", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="final", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="implements", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="in", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="inline", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="let", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="macro", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="match", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="mutable", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="null", lang="Solidity", category="Literal" },
      new IndexModel.Keyword{ text="of", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="partial", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="promise", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="reference", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="relocatable", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="sealed", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="sizeof", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="static", lang="Solidity", category="Modifier" },
      new IndexModel.Keyword{ text="supports", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="switch", lang="Solidity", category="Control Flow" },
      new IndexModel.Keyword{ text="typedef", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="typeof", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="var", lang="Solidity", category="" },
      new IndexModel.Keyword{ text="await", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="break", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="case", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="catch", lang="JavaScript", category="Exception Handling" },
      new IndexModel.Keyword{ text="class", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="continue", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="debugger", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="default", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="delete", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="do", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="else", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="enum", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="export", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="extends", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="false", lang="JavaScript", category="Literal" },
      new IndexModel.Keyword{ text="finally", lang="JavaScript", category="Exception Handling" },
      new IndexModel.Keyword{ text="for", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="function", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="if", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="import", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="in", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="instanceof", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="new", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="null", lang="JavaScript", category="Literal" },
      new IndexModel.Keyword{ text="return", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="super", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="switch", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="this", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="throw", lang="JavaScript", category="Exception Handling" },
      new IndexModel.Keyword{ text="true", lang="JavaScript", category="Literal" },
      new IndexModel.Keyword{ text="try", lang="JavaScript", category="Exception Handling" },
      new IndexModel.Keyword{ text="typeof", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="var", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="void", lang="JavaScript", category="Type" },
      new IndexModel.Keyword{ text="while", lang="JavaScript", category="Control Flow" },
      new IndexModel.Keyword{ text="with", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="yield", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="let", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="static", lang="JavaScript", category="Modifier" },
      new IndexModel.Keyword{ text="implements", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="interface", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="package", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="private", lang="JavaScript", category="Access Modifier" },
      new IndexModel.Keyword{ text="protected", lang="JavaScript", category="Access Modifier" },
      new IndexModel.Keyword{ text="public", lang="JavaScript", category="Access Modifier" },
      new IndexModel.Keyword{ text="as", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="async", lang="JavaScript", category="Modifier" },
      new IndexModel.Keyword{ text="from", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="get", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="of", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="set", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="target", lang="JavaScript", category="" },
      new IndexModel.Keyword{ text="False", lang="Python", category="Literal" },
      new IndexModel.Keyword{ text="await", lang="Python", category="" },
      new IndexModel.Keyword{ text="else", lang="Python", category="Control Flow" },
      new IndexModel.Keyword{ text="import", lang="Python", category="" },
      new IndexModel.Keyword{ text="pass", lang="Python", category="" },
      new IndexModel.Keyword{ text="None", lang="Python", category="Literal" },
      new IndexModel.Keyword{ text="break", lang="Python", category="Control Flow" },
      new IndexModel.Keyword{ text="except", lang="Python", category="Exception Handling" },
      new IndexModel.Keyword{ text="in", lang="Python", category="" },
      new IndexModel.Keyword{ text="raise", lang="Python", category="Exception Handling" },
      new IndexModel.Keyword{ text="True", lang="Python", category="Literal" },
      new IndexModel.Keyword{ text="class", lang="Python", category="" },
      new IndexModel.Keyword{ text="finally", lang="Python", category="Exception Handling" },
      new IndexModel.Keyword{ text="is", lang="Python", category="" },
      new IndexModel.Keyword{ text="return", lang="Python", category="" },
      new IndexModel.Keyword{ text="and", lang="Python", category="" },
      new IndexModel.Keyword{ text="continue", lang="Python", category="Control Flow" },
      new IndexModel.Keyword{ text="for", lang="Python", category="Control Flow" },
      new IndexModel.Keyword{ text="lambda", lang="Python", category="" },
      new IndexModel.Keyword{ text="try", lang="Python", category="Exception Handling" },
      new IndexModel.Keyword{ text="as", lang="Python", category="" },
      new IndexModel.Keyword{ text="def", lang="Python", category="" },
      new IndexModel.Keyword{ text="from", lang="Python", category="" },
      new IndexModel.Keyword{ text="nonlocal", lang="Python", category="Modifier" },
      new IndexModel.Keyword{ text="while", lang="Python", category="Control Flow" },
      new IndexModel.Keyword{ text="assert", lang="Python", category="" },
      new IndexModel.Keyword{ text="del", lang="Python", category="" },
      new IndexModel.Keyword{ text="global", lang="Python", category="Modifier" },
      new IndexModel.Keyword{ text="not", lang="Python", category="" },
      new IndexModel.Keyword{ text="with", lang="Python", category="" },
      new IndexModel.Keyword{ text="async", lang="Python", category="Modifier" },
      new IndexModel.Keyword{ text="elif", lang="Python", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="Python", category="Control Flow" },
      new IndexModel.Keyword{ text="or", lang="Python", category="" },
      new IndexModel.Keyword{ text="yield", lang="Python", category="" },
      new IndexModel.Keyword{ text="abstract", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="as", lang="C#", category="" },
      new IndexModel.Keyword{ text="base", lang="C#", category="" },
      new IndexModel.Keyword{ text="bool", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="break", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="byte", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="case", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="catch", lang="C#", category="Exception Handling" },
      new IndexModel.Keyword{ text="char", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="checked", lang="C#", category="" },
      new IndexModel.Keyword{ text="class", lang="C#", category="" },
      new IndexModel.Keyword{ text="const", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="continue", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="decimal", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="default", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="delegate", lang="C#", category="" },
      new IndexModel.Keyword{ text="do", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="double", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="else", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="enum", lang="C#", category="" },
      new IndexModel.Keyword{ text="event", lang="C#", category="" },
      new IndexModel.Keyword{ text="explicit", lang="C#", category="" },
      new IndexModel.Keyword{ text="extern", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="false", lang="C#", category="Literal" },
      new IndexModel.Keyword{ text="finally", lang="C#", category="Exception Handling" },
      new IndexModel.Keyword{ text="fixed", lang="C#", category="" },
      new IndexModel.Keyword{ text="float", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="for", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="foreach", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="goto", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="implicit", lang="C#", category="" },
      new IndexModel.Keyword{ text="in", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="int", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="interface", lang="C#", category="" },
      new IndexModel.Keyword{ text="internal", lang="C#", category="Access Modifier" },
      new IndexModel.Keyword{ text="is", lang="C#", category="" },
      new IndexModel.Keyword{ text="lock", lang="C#", category="" },
      new IndexModel.Keyword{ text="long", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="namespace", lang="C#", category="" },
      new IndexModel.Keyword{ text="new", lang="C#", category="" },
      new IndexModel.Keyword{ text="null", lang="C#", category="Literal" },
      new IndexModel.Keyword{ text="object", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="operator", lang="C#", category="" },
      new IndexModel.Keyword{ text="out", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="override", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="params", lang="C#", category="" },
      new IndexModel.Keyword{ text="private", lang="C#", category="Access Modifier" },
      new IndexModel.Keyword{ text="protected", lang="C#", category="Access Modifier" },
      new IndexModel.Keyword{ text="public", lang="C#", category="Access Modifier" },
      new IndexModel.Keyword{ text="readonly", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="ref", lang="C#", category="" },
      new IndexModel.Keyword{ text="return", lang="C#", category="" },
      new IndexModel.Keyword{ text="sbyte", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="sealed", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="short", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="sizeof", lang="C#", category="" },
      new IndexModel.Keyword{ text="stackalloc", lang="C#", category="" },
      new IndexModel.Keyword{ text="static", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="string", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="struct", lang="C#", category="" },
      new IndexModel.Keyword{ text="switch", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="this", lang="C#", category="" },
      new IndexModel.Keyword{ text="throw", lang="C#", category="Exception Handling" },
      new IndexModel.Keyword{ text="true", lang="C#", category="Literal" },
      new IndexModel.Keyword{ text="try", lang="C#", category="Exception Handling" },
      new IndexModel.Keyword{ text="typeof", lang="C#", category="" },
      new IndexModel.Keyword{ text="uint", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="ulong", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="unchecked", lang="C#", category="" },
      new IndexModel.Keyword{ text="unsafe", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="ushort", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="using", lang="C#", category="" },
      new IndexModel.Keyword{ text="virtual", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="void", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="volatile", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="while", lang="C#", category="Control Flow" },
      new IndexModel.Keyword{ text="add", lang="C#", category="" },
      new IndexModel.Keyword{ text="and", lang="C#", category="" },
      new IndexModel.Keyword{ text="alias", lang="C#", category="" },
      new IndexModel.Keyword{ text="ascending", lang="C#", category="" },
      new IndexModel.Keyword{ text="async", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="await", lang="C#", category="" },
      new IndexModel.Keyword{ text="by", lang="C#", category="" },
      new IndexModel.Keyword{ text="descending", lang="C#", category="" },
      new IndexModel.Keyword{ text="dynamic", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="equals", lang="C#", category="" },
      new IndexModel.Keyword{ text="from", lang="C#", category="" },
      new IndexModel.Keyword{ text="get", lang="C#", category="" },
      new IndexModel.Keyword{ text="global", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="group", lang="C#", category="" },
      new IndexModel.Keyword{ text="init", lang="C#", category="" },
      new IndexModel.Keyword{ text="into", lang="C#", category="" },
      new IndexModel.Keyword{ text="join", lang="C#", category="" },
      new IndexModel.Keyword{ text="let", lang="C#", category="" },
      new IndexModel.Keyword{ text="managed", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="nameof", lang="C#", category="" },
      new IndexModel.Keyword{ text="nint", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="not", lang="C#", category="" },
      new IndexModel.Keyword{ text="notnull", lang="C#", category="" },
      new IndexModel.Keyword{ text="nuint", lang="C#", category="Type" },
      new IndexModel.Keyword{ text="on", lang="C#", category="" },
      new IndexModel.Keyword{ text="or", lang="C#", category="" },
      new IndexModel.Keyword{ text="orderby", lang="C#", category="" },
      new IndexModel.Keyword{ text="partial", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="record", lang="C#", category="" },
      new IndexModel.Keyword{ text="remove", lang="C#", category="" },
      new IndexModel.Keyword{ text="select", lang="C#", category="" },
      new IndexModel.Keyword{ text="set", lang="C#", category="" },
      new IndexModel.Keyword{ text="unmanaged", lang="C#", category="Modifier" },
      new IndexModel.Keyword{ text="value", lang="C#", category="" },
      new IndexModel.Keyword{ text="var", lang="C#", category="" },
      new IndexModel.Keyword{ text="when", lang="C#", category="" },
      new IndexModel.Keyword{ text="where", lang="C#", category="" },
      new IndexModel.Keyword{ text="with", lang="C#", category="" },
      new IndexModel.Keyword{ text="yield", lang="C#", category="" },
      new IndexModel.Keyword{ text="as", lang="Rust", category="" },
      new IndexModel.Keyword{ text="break", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="const", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="continue", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="crate", lang="Rust", category="" },
      new IndexModel.Keyword{ text="else", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="enum", lang="Rust", category="" },
      new IndexModel.Keyword{ text="extern", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="false", lang="Rust", category="Literal" },
      new IndexModel.Keyword{ text="fn", lang="Rust", category="" },
      new IndexModel.Keyword{ text="for", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="impl", lang="Rust", category="" },
      new IndexModel.Keyword{ text="in", lang="Rust", category="" },
      new IndexModel.Keyword{ text="let", lang="Rust", category="" },
      new IndexModel.Keyword{ text="loop", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="match", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="mod", lang="Rust", category="" },
      new IndexModel.Keyword{ text="move", lang="Rust", category="" },
      new IndexModel.Keyword{ text="mut", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="pub", lang="Rust", category="Access Modifier" },
      new IndexModel.Keyword{ text="ref", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="return", lang="Rust", category="" },
      new IndexModel.Keyword{ text="self", lang="Rust", category="" },
      new IndexModel.Keyword{ text="Self", lang="Rust", category="" },
      new IndexModel.Keyword{ text="static", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="struct", lang="Rust", category="" },
      new IndexModel.Keyword{ text="super", lang="Rust", category="" },
      new IndexModel.Keyword{ text="trait", lang="Rust", category="" },
      new IndexModel.Keyword{ text="true", lang="Rust", category="Literal" },
      new IndexModel.Keyword{ text="type", lang="Rust", category="" },
      new IndexModel.Keyword{ text="unsafe", lang="Rust", category="" },
      new IndexModel.Keyword{ text="use", lang="Rust", category="" },
      new IndexModel.Keyword{ text="where", lang="Rust", category="" },
      new IndexModel.Keyword{ text="while", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="async", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="await", lang="Rust", category="" },
      new IndexModel.Keyword{ text="dyn", lang="Rust", category="" },
      new IndexModel.Keyword{ text="abstract", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="become", lang="Rust", category="" },
      new IndexModel.Keyword{ text="box", lang="Rust", category="" },
      new IndexModel.Keyword{ text="do", lang="Rust", category="Control Flow" },
      new IndexModel.Keyword{ text="final", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="macro", lang="Rust", category="" },
      new IndexModel.Keyword{ text="override", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="priv", lang="Rust", category="Access Modifier" },
      new IndexModel.Keyword{ text="typeof", lang="Rust", category="" },
      new IndexModel.Keyword{ text="unsized", lang="Rust", category="" },
      new IndexModel.Keyword{ text="virtual", lang="Rust", category="Modifier" },
      new IndexModel.Keyword{ text="yield", lang="Rust", category="" },
      new IndexModel.Keyword{ text="try", lang="Rust", category="Exception Handling" },
      new IndexModel.Keyword{ text="union", lang="Rust", category="" },
      new IndexModel.Keyword{ text="i8", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="i16", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="i32", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="i64", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="i128", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="isize", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="u8", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="u16", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="u32", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="u64", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="u128", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="usize", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="f32", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="f64", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="bool", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="char", lang="Rust", category="Type" },
      new IndexModel.Keyword{ text="abstract", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="continue", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="for", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="new", lang="Java", category="" },
      new IndexModel.Keyword{ text="switch", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="assert", lang="Java", category="" },
      new IndexModel.Keyword{ text="default", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="goto", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="package", lang="Java", category="" },
      new IndexModel.Keyword{ text="synchronized", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="boolean", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="do", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="private", lang="Java", category="Access Modifier" },
      new IndexModel.Keyword{ text="this", lang="Java", category="" },
      new IndexModel.Keyword{ text="break", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="double", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="implements", lang="Java", category="" },
      new IndexModel.Keyword{ text="protected", lang="Java", category="Access Modifier" },
      new IndexModel.Keyword{ text="throw", lang="Java", category="Exception Handling" },
      new IndexModel.Keyword{ text="byte", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="else", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="import", lang="Java", category="" },
      new IndexModel.Keyword{ text="public", lang="Java", category="Access Modifier" },
      new IndexModel.Keyword{ text="throws", lang="Java", category="Exception Handling" },
      new IndexModel.Keyword{ text="case", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="enum", lang="Java", category="" },
      new IndexModel.Keyword{ text="instanceof", lang="Java", category="" },
      new IndexModel.Keyword{ text="return", lang="Java", category="" },
      new IndexModel.Keyword{ text="transient", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="catch", lang="Java", category="Exception Handling" },
      new IndexModel.Keyword{ text="extends", lang="Java", category="" },
      new IndexModel.Keyword{ text="int", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="short", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="try", lang="Java", category="Exception Handling" },
      new IndexModel.Keyword{ text="char", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="final", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="interface", lang="Java", category="" },
      new IndexModel.Keyword{ text="static", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="void", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="class", lang="Java", category="" },
      new IndexModel.Keyword{ text="finally", lang="Java", category="Exception Handling" },
      new IndexModel.Keyword{ text="long", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="strictfp", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="volatile", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="const", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="float", lang="Java", category="Type" },
      new IndexModel.Keyword{ text="native", lang="Java", category="Modifier" },
      new IndexModel.Keyword{ text="super", lang="Java", category="" },
      new IndexModel.Keyword{ text="while", lang="Java", category="Control Flow" },
      new IndexModel.Keyword{ text="true", lang="Java", category="Literal" },
      new IndexModel.Keyword{ text="false", lang="Java", category="Literal" },
      new IndexModel.Keyword{ text="null", lang="Java", category="Literal" },
      new IndexModel.Keyword{ text="alignas", lang="C++", category="" },
      new IndexModel.Keyword{ text="alignof", lang="C++", category="" },
      new IndexModel.Keyword{ text="and", lang="C++", category="" },
      new IndexModel.Keyword{ text="and_eq", lang="C++", category="" },
      new IndexModel.Keyword{ text="asm", lang="C++", category="" },
      new IndexModel.Keyword{ text="atomic_cancel", lang="C++", category="" },
      new IndexModel.Keyword{ text="atomic_commit", lang="C++", category="" },
      new IndexModel.Keyword{ text="atomic_noexcept", lang="C++", category="" },
      new IndexModel.Keyword{ text="auto", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="bitand", lang="C++", category="" },
      new IndexModel.Keyword{ text="bitor", lang="C++", category="" },
      new IndexModel.Keyword{ text="bool", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="break", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="case", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="catch", lang="C++", category="Exception Handling" },
      new IndexModel.Keyword{ text="char", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="char8_t", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="char16_t", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="char32_t", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="class", lang="C++", category="" },
      new IndexModel.Keyword{ text="compl", lang="C++", category="" },
      new IndexModel.Keyword{ text="concept", lang="C++", category="" },
      new IndexModel.Keyword{ text="const", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="consteval", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="constexpr", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="constinit", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="const_cast", lang="C++", category="" },
      new IndexModel.Keyword{ text="continue", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="co_await", lang="C++", category="" },
      new IndexModel.Keyword{ text="co_return", lang="C++", category="" },
      new IndexModel.Keyword{ text="co_yield", lang="C++", category="" },
      new IndexModel.Keyword{ text="decltype", lang="C++", category="" },
      new IndexModel.Keyword{ text="default", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="delete", lang="C++", category="" },
      new IndexModel.Keyword{ text="do", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="double", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="dynamic_cast", lang="C++", category="" },
      new IndexModel.Keyword{ text="else", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="enum", lang="C++", category="" },
      new IndexModel.Keyword{ text="explicit", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="export", lang="C++", category="" },
      new IndexModel.Keyword{ text="extern", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="false", lang="C++", category="Literal" },
      new IndexModel.Keyword{ text="float", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="for", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="friend", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="goto", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="inline", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="int", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="long", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="mutable", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="namespace", lang="C++", category="" },
      new IndexModel.Keyword{ text="new", lang="C++", category="" },
      new IndexModel.Keyword{ text="noexcept", lang="C++", category="" },
      new IndexModel.Keyword{ text="not", lang="C++", category="" },
      new IndexModel.Keyword{ text="not_eq", lang="C++", category="" },
      new IndexModel.Keyword{ text="nullptr", lang="C++", category="Literal" },
      new IndexModel.Keyword{ text="operator", lang="C++", category="" },
      new IndexModel.Keyword{ text="or", lang="C++", category="" },
      new IndexModel.Keyword{ text="or_eq", lang="C++", category="" },
      new IndexModel.Keyword{ text="private", lang="C++", category="Access Modifier" },
      new IndexModel.Keyword{ text="protected", lang="C++", category="Access Modifier" },
      new IndexModel.Keyword{ text="public", lang="C++", category="Access Modifier" },
      new IndexModel.Keyword{ text="reflexpr", lang="C++", category="" },
      new IndexModel.Keyword{ text="register", lang="C++", category="" },
      new IndexModel.Keyword{ text="reinterpret_cast", lang="C++", category="" },
      new IndexModel.Keyword{ text="requires", lang="C++", category="" },
      new IndexModel.Keyword{ text="return", lang="C++", category="" },
      new IndexModel.Keyword{ text="short", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="signed", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="sizeof", lang="C++", category="" },
      new IndexModel.Keyword{ text="static", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="static_assert", lang="C++", category="" },
      new IndexModel.Keyword{ text="static_cast", lang="C++", category="" },
      new IndexModel.Keyword{ text="struct", lang="C++", category="" },
      new IndexModel.Keyword{ text="switch", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="synchronized", lang="C++", category="" },
      new IndexModel.Keyword{ text="template", lang="C++", category="" },
      new IndexModel.Keyword{ text="this", lang="C++", category="" },
      new IndexModel.Keyword{ text="thread_local", lang="C++", category="" },
      new IndexModel.Keyword{ text="throw", lang="C++", category="Exception Handling" },
      new IndexModel.Keyword{ text="true", lang="C++", category="Literal" },
      new IndexModel.Keyword{ text="try", lang="C++", category="Exception Handling" },
      new IndexModel.Keyword{ text="typedef", lang="C++", category="" },
      new IndexModel.Keyword{ text="typeid", lang="C++", category="" },
      new IndexModel.Keyword{ text="typename", lang="C++", category="" },
      new IndexModel.Keyword{ text="union", lang="C++", category="" },
      new IndexModel.Keyword{ text="unsigned", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="using", lang="C++", category="" },
      new IndexModel.Keyword{ text="virtual", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="void", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="volatile", lang="C++", category="Modifier" },
      new IndexModel.Keyword{ text="wchar_t", lang="C++", category="Type" },
      new IndexModel.Keyword{ text="while", lang="C++", category="Control Flow" },
      new IndexModel.Keyword{ text="xor", lang="C++", category="" },
      new IndexModel.Keyword{ text="xor_eq", lang="C++", category="" },
      new IndexModel.Keyword{ text="auto", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="break", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="case", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="char", lang="C", category="Type" },
      new IndexModel.Keyword{ text="const", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="continue", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="default", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="do", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="double", lang="C", category="Type" },
      new IndexModel.Keyword{ text="else", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="enum", lang="C", category="" },
      new IndexModel.Keyword{ text="extern", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="float", lang="C", category="Type" },
      new IndexModel.Keyword{ text="for", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="goto", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="inline", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="int", lang="C", category="Type" },
      new IndexModel.Keyword{ text="long", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="register", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="restrict", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="return", lang="C", category="" },
      new IndexModel.Keyword{ text="short", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="signed", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="sizeof", lang="C", category="" },
      new IndexModel.Keyword{ text="static", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="struct", lang="C", category="" },
      new IndexModel.Keyword{ text="switch", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="typedef", lang="C", category="" },
      new IndexModel.Keyword{ text="union", lang="C", category="" },
      new IndexModel.Keyword{ text="unsigned", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="void", lang="C", category="Type" },
      new IndexModel.Keyword{ text="volatile", lang="C", category="Modifier" },
      new IndexModel.Keyword{ text="while", lang="C", category="Control Flow" },
      new IndexModel.Keyword{ text="abstract", lang="PHP", category="Modifier" },
      new IndexModel.Keyword{ text="and", lang="PHP", category="" },
      new IndexModel.Keyword{ text="as", lang="PHP", category="" },
      new IndexModel.Keyword{ text="break", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="callable", lang="PHP", category="Modifier" },
      new IndexModel.Keyword{ text="case", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="catch", lang="PHP", category="Exception Handling" },
      new IndexModel.Keyword{ text="class", lang="PHP", category="" },
      new IndexModel.Keyword{ text="clone", lang="PHP", category="" },
      new IndexModel.Keyword{ text="const", lang="PHP", category="Modifier" },
      new IndexModel.Keyword{ text="continue", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="declare", lang="PHP", category="" },
      new IndexModel.Keyword{ text="default", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="do", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="echo", lang="PHP", category="" },
      new IndexModel.Keyword{ text="else", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="elseif", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="empty", lang="PHP", category="" },
      new IndexModel.Keyword{ text="enddeclare", lang="PHP", category="" },
      new IndexModel.Keyword{ text="endfor", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="endforeach", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="endif", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="endswitch", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="endwhile", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="extends", lang="PHP", category="" },
      new IndexModel.Keyword{ text="final", lang="PHP", category="Modifier" },
      new IndexModel.Keyword{ text="finally", lang="PHP", category="Exception Handling" },
      new IndexModel.Keyword{ text="fn", lang="PHP", category="" },
      new IndexModel.Keyword{ text="for", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="foreach", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="function", lang="PHP", category="" },
      new IndexModel.Keyword{ text="global", lang="PHP", category="Access Modifier" },
      new IndexModel.Keyword{ text="goto", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="implements", lang="PHP", category="" },
      new IndexModel.Keyword{ text="include", lang="PHP", category="" },
      new IndexModel.Keyword{ text="include_once", lang="PHP", category="" },
      new IndexModel.Keyword{ text="instanceof", lang="PHP", category="" },
      new IndexModel.Keyword{ text="insteadof", lang="PHP", category="" },
      new IndexModel.Keyword{ text="interface", lang="PHP", category="" },
      new IndexModel.Keyword{ text="isset", lang="PHP", category="" },
      new IndexModel.Keyword{ text="list", lang="PHP", category="" },
      new IndexModel.Keyword{ text="namespace", lang="PHP", category="" },
      new IndexModel.Keyword{ text="new", lang="PHP", category="" },
      new IndexModel.Keyword{ text="or", lang="PHP", category="" },
      new IndexModel.Keyword{ text="print", lang="PHP", category="" },
      new IndexModel.Keyword{ text="private", lang="PHP", category="Access Modifier" },
      new IndexModel.Keyword{ text="protected", lang="PHP", category="Access Modifier" },
      new IndexModel.Keyword{ text="public", lang="PHP", category="Access Modifier" },
      new IndexModel.Keyword{ text="require", lang="PHP", category="" },
      new IndexModel.Keyword{ text="require_once", lang="PHP", category="" },
      new IndexModel.Keyword{ text="return", lang="PHP", category="" },
      new IndexModel.Keyword{ text="static", lang="PHP", category="Modifier" },
      new IndexModel.Keyword{ text="switch", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="throw", lang="PHP", category="Exception Handling" },
      new IndexModel.Keyword{ text="trait", lang="PHP", category="" },
      new IndexModel.Keyword{ text="try", lang="PHP", category="Exception Handling" },
      new IndexModel.Keyword{ text="unset", lang="PHP", category="" },
      new IndexModel.Keyword{ text="use", lang="PHP", category="" },
      new IndexModel.Keyword{ text="var", lang="PHP", category="" },
      new IndexModel.Keyword{ text="while", lang="PHP", category="Control Flow" },
      new IndexModel.Keyword{ text="xor", lang="PHP", category="" },
      new IndexModel.Keyword{ text="yield", lang="PHP", category="" },
      new IndexModel.Keyword{ text="from", lang="PHP", category="" },
      new IndexModel.Keyword{ text="true", lang="PHP", category="Literal" },
      new IndexModel.Keyword{ text="false", lang="PHP", category="Literal" },
      new IndexModel.Keyword{ text="AddHandler", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="AddressOf", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Alias", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="And", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="AndAlso", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="As", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Boolean", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="ByRef", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Byte", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="ByVal", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Call", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Case", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Catch", lang="Visual Basic", category="Exception Handling" },
      new IndexModel.Keyword{ text="CBool", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CByte", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CChar", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CDate", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CDbl", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CDec", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Char", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="CInt", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Class", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CLng", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CObj", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Const", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Continue", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="CSByte", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CShort", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CSng", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CStr", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CType", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CUInt", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CULng", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="CUShort", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Date", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Decimal", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Declare", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Default", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Delegate", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Dim", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="DirectCast", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Do", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Double", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Each", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Else", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="ElseIf", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="End", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="EndIf", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Enum", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Erase", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Error", lang="Visual Basic", category="Exception Handling" },
      new IndexModel.Keyword{ text="Event", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Exit", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="False", lang="Visual Basic", category="Literal" },
      new IndexModel.Keyword{ text="Finally", lang="Visual Basic", category="Exception Handling" },
      new IndexModel.Keyword{ text="For", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Friend", lang="Visual Basic", category="Access Modifier" },
      new IndexModel.Keyword{ text="Function", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Get", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="GetType", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Global", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="GoSub", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="GoTo", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Handles", lang="Visual Basic", category="Exception Handling" },
      new IndexModel.Keyword{ text="If", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Implements", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Imports", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="In", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Inherits", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Integer", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Interface", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Is", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="IsNot", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Let", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Lib", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Like", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Long", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Loop", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Me", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Mod", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Module", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="MustInherit", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="MustOverride", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="MyBase", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="MyClass", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="NameOf", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Namespace", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Narrowing", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="New", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Next", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Not", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Nothing", lang="Visual Basic", category="Literal" },
      new IndexModel.Keyword{ text="NotInheritable", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="NotOverridable", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Object", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Of", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="On", lang="Visual Basic", category="Exception Handling" },
      new IndexModel.Keyword{ text="Operator", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Option", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Optional", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Or", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="OrElse", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Out", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Overloads", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Overridable", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Overrides", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="ParamArray", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Partial", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Private", lang="Visual Basic", category="Access Modifier" },
      new IndexModel.Keyword{ text="Property", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Protected", lang="Visual Basic", category="Access Modifier" },
      new IndexModel.Keyword{ text="Public", lang="Visual Basic", category="Access Modifier" },
      new IndexModel.Keyword{ text="RaiseEvent", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="ReadOnly", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="ReDim", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="REM", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="RemoveHandler", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Resume", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Return", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="SByte", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Select", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Set", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Shadows", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Shared", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Short", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Single", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Static", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Step", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Stop", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="String", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Structure", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Sub", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="SyncLock", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Then", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Throw", lang="Visual Basic", category="Exception Handling" },
      new IndexModel.Keyword{ text="To", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="True", lang="Visual Basic", category="Literal" },
      new IndexModel.Keyword{ text="Try", lang="Visual Basic", category="Exception Handling" },
      new IndexModel.Keyword{ text="TryCast", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="TypeOf", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="UInteger", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="ULong", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="UShort", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Using", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Variant", lang="Visual Basic", category="Type" },
      new IndexModel.Keyword{ text="Wend", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="When", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="While", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Widening", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="With", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="WithEvents", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="WriteOnly", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Xor", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Async", lang="Visual Basic", category="Modifier" },
      new IndexModel.Keyword{ text="Await", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Until", lang="Visual Basic", category="Control Flow" },
      new IndexModel.Keyword{ text="Skip", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Explicit", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Into", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="Strict", lang="Visual Basic", category="" },
      new IndexModel.Keyword{ text="break", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="case", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="catch", lang="TypeScript", category="Exception Handling" },
      new IndexModel.Keyword{ text="class", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="const", lang="TypeScript", category="Modifier" },
      new IndexModel.Keyword{ text="continue", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="debugger", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="default", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="delete", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="do", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="else", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="enum", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="export", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="extends", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="false", lang="TypeScript", category="Literal" },
      new IndexModel.Keyword{ text="finally", lang="TypeScript", category="Exception Handling" },
      new IndexModel.Keyword{ text="for", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="function", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="if", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="import", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="in", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="istanceOf", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="new", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="null", lang="TypeScript", category="Literal" },
      new IndexModel.Keyword{ text="return", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="super", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="switch", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="this", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="throw", lang="TypeScript", category="Exception Handling" },
      new IndexModel.Keyword{ text="true", lang="TypeScript", category="Literal" },
      new IndexModel.Keyword{ text="try", lang="TypeScript", category="Exception Handling" },
      new IndexModel.Keyword{ text="typeOf", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="var", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="void", lang="TypeScript", category="Type" },
      new IndexModel.Keyword{ text="while", lang="TypeScript", category="Control Flow" },
      new IndexModel.Keyword{ text="with", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="as", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="implements", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="interface", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="let", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="package", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="private", lang="TypeScript", category="Access Modifier" },
      new IndexModel.Keyword{ text="protected", lang="TypeScript", category="Access Modifier" },
      new IndexModel.Keyword{ text="public", lang="TypeScript", category="Access Modifier" },
      new IndexModel.Keyword{ text="static", lang="TypeScript", category="Modifier" },
      new IndexModel.Keyword{ text="yield", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="any", lang="TypeScript", category="Type" },
      new IndexModel.Keyword{ text="boolean", lang="TypeScript", category="Type" },
      new IndexModel.Keyword{ text="constructor", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="declare", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="get", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="module", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="require", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="number", lang="TypeScript", category="Type" },
      new IndexModel.Keyword{ text="set", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="string", lang="TypeScript", category="Type" },
      new IndexModel.Keyword{ text="symbol", lang="TypeScript", category="Type" },
      new IndexModel.Keyword{ text="type", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="from", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="of", lang="TypeScript", category="" },
      new IndexModel.Keyword{ text="break", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="default", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="func", lang="Go", category="" },
      new IndexModel.Keyword{ text="interface", lang="Go", category="" },
      new IndexModel.Keyword{ text="select", lang="Go", category="" },
      new IndexModel.Keyword{ text="case", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="defer", lang="Go", category="" },
      new IndexModel.Keyword{ text="go", lang="Go", category="" },
      new IndexModel.Keyword{ text="map", lang="Go", category="" },
      new IndexModel.Keyword{ text="struct", lang="Go", category="" },
      new IndexModel.Keyword{ text="chan", lang="Go", category="" },
      new IndexModel.Keyword{ text="else", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="goto", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="package", lang="Go", category="" },
      new IndexModel.Keyword{ text="switch", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="const", lang="Go", category="Modifier" },
      new IndexModel.Keyword{ text="fallthrough", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="range", lang="Go", category="" },
      new IndexModel.Keyword{ text="type", lang="Go", category="" },
      new IndexModel.Keyword{ text="continue", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="for", lang="Go", category="Control Flow" },
      new IndexModel.Keyword{ text="import", lang="Go", category="" },
      new IndexModel.Keyword{ text="return", lang="Go", category="" },
      new IndexModel.Keyword{ text="var", lang="Go", category="" },
      new IndexModel.Keyword{ text="true", lang="Go", category="Literal" },
      new IndexModel.Keyword{ text="false", lang="Go", category="Literal" },
      new IndexModel.Keyword{ text="nil", lang="Go", category="Literal" },
      new IndexModel.Keyword{ text="int8", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="int16", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="int32", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="int64", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="uint8", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="uint16", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="uint32", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="uint64", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="int", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="uint", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="rune", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="byte", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="uintptr", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="float32", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="float64", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="complex64", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="complex128", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="string", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="bool", lang="Go", category="Type" },
      new IndexModel.Keyword{ text="__ENCODING__", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="__LINE__", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="__FILE__", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="BEGIN", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="END", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="alias", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="and", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="begin", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="break", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="case", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="class", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="def", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="defined?", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="do", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="else", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="elsif", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="end", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="ensure", lang="Ruby", category="Exception Handling" },
      new IndexModel.Keyword{ text="false", lang="Ruby", category="Literal" },
      new IndexModel.Keyword{ text="for", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="in", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="module", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="next", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="nil", lang="Ruby", category="Literal" },
      new IndexModel.Keyword{ text="not", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="or", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="raise", lang="Ruby", category="Exception Handling" },
      new IndexModel.Keyword{ text="redo", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="rescue", lang="Ruby", category="Exception Handling" },
      new IndexModel.Keyword{ text="retry", lang="Ruby", category="Exception Handling" },
      new IndexModel.Keyword{ text="return", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="self", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="super", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="then", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="true", lang="Ruby", category="Literal" },
      new IndexModel.Keyword{ text="undef", lang="Ruby", category="Modifier" },
      new IndexModel.Keyword{ text="unless", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="until", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="when", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="while", lang="Ruby", category="Control Flow" },
      new IndexModel.Keyword{ text="yield", lang="Ruby", category="" },
      new IndexModel.Keyword{ text="class", lang="Swift", category="" },
      new IndexModel.Keyword{ text="func", lang="Swift", category="" },
      new IndexModel.Keyword{ text="let", lang="Swift", category="" },
      new IndexModel.Keyword{ text="public", lang="Swift", category="Access Modifier" },
      new IndexModel.Keyword{ text="deinit", lang="Swift", category="" },
      new IndexModel.Keyword{ text="enum", lang="Swift", category="" },
      new IndexModel.Keyword{ text="extension", lang="Swift", category="" },
      new IndexModel.Keyword{ text="import", lang="Swift", category="" },
      new IndexModel.Keyword{ text="init", lang="Swift", category="" },
      new IndexModel.Keyword{ text="internal", lang="Swift", category="Access Modifier" },
      new IndexModel.Keyword{ text="operator", lang="Swift", category="" },
      new IndexModel.Keyword{ text="private", lang="Swift", category="Access Modifier" },
      new IndexModel.Keyword{ text="protocol", lang="Swift", category="" },
      new IndexModel.Keyword{ text="static", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="struct", lang="Swift", category="" },
      new IndexModel.Keyword{ text="subscript", lang="Swift", category="" },
      new IndexModel.Keyword{ text="typealias", lang="Swift", category="" },
      new IndexModel.Keyword{ text="var", lang="Swift", category="" },
      new IndexModel.Keyword{ text="break", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="case", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="continue", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="default", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="do", lang="Swift", category="Exception Handling" },
      new IndexModel.Keyword{ text="else", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="fallthrough", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="for", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="if", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="in", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="return", lang="Swift", category="" },
      new IndexModel.Keyword{ text="switch", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="where", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="while", lang="Swift", category="Control Flow" },
      new IndexModel.Keyword{ text="as", lang="Swift", category="" },
      new IndexModel.Keyword{ text="false", lang="Swift", category="Literal" },
      new IndexModel.Keyword{ text="is", lang="Swift", category="" },
      new IndexModel.Keyword{ text="nil", lang="Swift", category="Literal" },
      new IndexModel.Keyword{ text="self", lang="Swift", category="" },
      new IndexModel.Keyword{ text="super", lang="Swift", category="" },
      new IndexModel.Keyword{ text="true", lang="Swift", category="Literal" },
      new IndexModel.Keyword{ text="convenience", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="dynamic", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="didSet", lang="Swift", category="" },
      new IndexModel.Keyword{ text="final", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="get", lang="Swift", category="" },
      new IndexModel.Keyword{ text="infix", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="inout", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="lazy", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="mutating", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="nonmutating", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="optional", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="override", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="postfix", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="prefix", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="protocol", lang="Swift", category="" },
      new IndexModel.Keyword{ text="required", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="set", lang="Swift", category="" },
      new IndexModel.Keyword{ text="unowned", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="weak", lang="Swift", category="Modifier" },
      new IndexModel.Keyword{ text="willSet", lang="Swift", category="" },
      new IndexModel.Keyword{ text="UInt8", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="UInt16", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="UInt32", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="UInt64", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Int8", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Int16", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Int32", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Int64", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Int", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Uint", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Double", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Float", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Character", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="String", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="Bool", lang="Swift", category="Type" },
      new IndexModel.Keyword{ text="try", lang="Swift", category="Exception Handling" },
      new IndexModel.Keyword{ text="rethrows", lang="Swift", category="Exception Handling" },
      new IndexModel.Keyword{ text="catch", lang="Swift", category="Exception Handling" },
      new IndexModel.Keyword{ text="throw", lang="Swift", category="Exception Handling" },
      new IndexModel.Keyword{ text="throws", lang="Swift", category="Exception Handling" },
      new IndexModel.Keyword{ text="as", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="break", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="class", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="continue", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="do", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="else", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="false", lang="Kotlin", category="Literal" },
      new IndexModel.Keyword{ text="for", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="fun", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="if", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="in", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="interface", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="is", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="null", lang="Kotlin", category="Literal" },
      new IndexModel.Keyword{ text="object", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="package", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="return", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="super", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="this", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="throw", lang="Kotlin", category="Exception Handling" },
      new IndexModel.Keyword{ text="throws", lang="Kotlin", category="Exception Handling" },
      new IndexModel.Keyword{ text="true", lang="Kotlin", category="Literal" },
      new IndexModel.Keyword{ text="try", lang="Kotlin", category="Exception Handling" },
      new IndexModel.Keyword{ text="typealias", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="typeof", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="val", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="var", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="when", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="while", lang="Kotlin", category="Control Flow" },
      new IndexModel.Keyword{ text="by", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="constructor", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="delegate", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="dynamic", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="field", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="file", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="catch", lang="Kotlin", category="Exception Handling" },
      new IndexModel.Keyword{ text="finally", lang="Kotlin", category="Exception Handling" },
      new IndexModel.Keyword{ text="get", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="import", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="init", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="param", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="property", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="set", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="setparam", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="where", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="actual", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="abstract", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="annotation", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="companion", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="const", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="crossinline", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="data", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="enum", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="expect", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="final", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="infix", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="inline", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="inner", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="internal", lang="Kotlin", category="Access Modifier" },
      new IndexModel.Keyword{ text="lateinit", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="noinline", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="open", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="operator", lang="Kotlin", category="" },
      new IndexModel.Keyword{ text="out", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="override", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="private", lang="Kotlin", category="Access Modifier" },
      new IndexModel.Keyword{ text="protected", lang="Kotlin", category="Access Modifier" },
      new IndexModel.Keyword{ text="public", lang="Kotlin", category="Access Modifier" },
      new IndexModel.Keyword{ text="reified", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="sealed", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="suspend", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="tailrec", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="vararg", lang="Kotlin", category="Modifier" },
      new IndexModel.Keyword{ text="Byte", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="Short", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="Int", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="Long", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="Float", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="Double", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="Char", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="Boolean", lang="Kotlin", category="Type" },
      new IndexModel.Keyword{ text="String", lang="Kotlin", category="Type" }
   };

   string[] themes = new string[] {"1", "2", "3", "4", "5", "6" };
   int[] themesDistribution = new int[] {20, 5, 5, 20, 15, 10 };
   string[] fonts = new string[] {"Vibur", "Fira Code", "Exo 2", "Roboto", "Montserrat", "Righteous", "Source Code Pro" };
   int[] fontsDistribution = new int[] {30, 20, 5, 5, 15, 10, 5 };    
   string[] backgrounds = new string[] {"", "1", "2", "3", "4" };
   int[] backgroundsDistribution = new int[] {30, 20, 10, 5, 5 };
   string[] textColors = new string[] {"#f09", "#00ffff", "#6600ff", "#66ff33", "#ffff00", "#ff66ff", "#ff9933", "#ff3300", "#fff" };
   int[] textColorsDistribution = new int[] {20, 20, 10, 15, 15, 5, 3, 10, 20 };
   string[] bgColors = new string[] {"#000", "#1a1a1a", "#000033", "#011c08", "#2b0000", "#26004d" };
   int[] bgColorsDistribution = new int[] {50, 30, 15, 10, 5, 5 };
   string[] borderColors = new string[] {"#f09", "#00ffff", "#6600ff", "#66ff33", "#ffff00", "#ff66ff", "#ff9933", "#ff3300", "#fff" };
   int[] borderColorsDistribution = new int[] {20, 20, 10, 15, 15, 5, 3, 10, 20};

   for (int i=0; i<keywords.Count; i++) {
      var k = keywords[i];        
      bool redo = false;
      do {
         redo = false;            
         k.template = GetRandomValue(k.text, i, themes, themesDistribution);
         k.bg = GetRandomValue(k.text, i, backgrounds, backgroundsDistribution);
         k.bgcol = GetRandomValue(k.text, i, bgColors, bgColorsDistribution);
         k.font = GetRandomValue(k.text, i, fonts, fontsDistribution);
         k.color = GetRandomValue(k.text, i, textColors, textColorsDistribution);        
         k.border = GetRandomValue(k.text, i, borderColors, borderColorsDistribution);

         if (k.template == "3") {
            k.bgcol = "#000";
            k.bg = "";
         } else if (k.template == "1") {
            k.color = "#fff";
         }   
         // if the keyword contains a y, p, j or g, re-do it
         if ((k.template == "3" && k.text.IndexOfAny(new char[] {'y', 'p', 'j', 'g'}) != -1)
            || (k.template == "3" && k.font.Equals("Vibur"))
            || (k.template == "2" && k.font.Equals("Vibur"))
            || k.color.Equals(k.bgcol)
            || k.color.Equals(k.border)
            || k.border.Equals(k.bgcol)) {
            redo = true;
         }
      } while (redo);        
   }

   string filename = "all.json";
   if (Request.Query["lang"].ToString().Length > 0) {
      keywords = keywords.Where(x => x.lang.ToLower() == Request.Query["lang"].ToString()).ToList();
      filename = Request.Query["lang"].ToString() + ".json";
   }

   System.IO.File.WriteAllText(filename, System.Text.Json.JsonSerializer.Serialize(keywords));

   string GetRandomValue(string keyword, int destinationIdex, string[] possibleValues, int[] valuesDistribution) {                
      int maxVal = valuesDistribution.Sum();
      int val = rnd.Next(1, maxVal + 1);
      int currentMax = 0;

      for (int i=0; i<valuesDistribution.Length; i++) {
         currentMax += valuesDistribution[i];
      if (val <= currentMax)
         return possibleValues[i];
      }
      throw new Exception("Should never reach this");
   }

   float getFsmForFont(string font) {
      if (font.ToLower() == "exo 2")
         return 1.1f;
      else if (font.ToLower() == "montserrat")
         return 0.85f;
      else if (font.ToLower() == "vibur")
         return 1.5f;
      else if (font.ToLower() == "source code pro")
         return 1f;
      else if (font.ToLower() == "roboto")
         return 1f;
      else if (font.ToLower() == "righteous")
         return 1f;
      return 1;
   }
}

@foreach (var k in keywords) {
   <div style="margin: 0px; padding: 0px; height: 500px;">
   <iframe src='templates/@k.template/page?text=@k.text&bg=@k.bg&bgcol=@k.bgcol.Replace("#", "")&color=@k.color.Replace("#", "")&border=@k.border.Replace("#", "")&font=@k.font&fsm=@getFsmForFont(k.font)' style="width:500px; height: 500px; border: none;" scrolling="no"></iframe>
   </div>
}

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p> 
</body>
</html>